/* =>Block
=>Inline-Block
=>Display-inline-block */
/*1.Create a block-level element and observe its behaviur.*/
.block{display: block; width: 100%; background-color: lightblue; padding: 20px;margin: 10px 0;}
/*Output:Two block-level elements stacked vertically, taking up the full width of the parent container.*/

/*2.Create an inline-block element to see how it behaves with inline elements.*/
.inline-block{display: inline-block; width: 200px; height: 100px;background-color: lightgreen;margin: 5ppx;}
/*Output:Three inline-block elements displayed side by side, maintaining the specified width and height.*/

/*3.Combine block and inline-block elements to observe spacing.*/
.block1{display: block;background-color: lightcoral; padding: 20px;margin: 10px 0;}
.inline-block1{display: inline-block; background-color: lightgoldenrodyellow; width: 150px;height: 100px;margin: 5px;}
/*Output: A block element followed by two inline-block elements displayed next to each other.*/

/*4.Create an example demonstrating the difference between inline and inline-block.*/
.inline{display: inline;background-color: lightblue;padding: 10px;margin: 5px;}
.inline-block2{display: inline-block;background-color: lightgreen;padding: 10px;width: 100px;}
/*Output:Inline elements will only take the space required by their content, while the inline-block element will maintain its specified width.*/

/*5.Create a responsive layout using inline-block elements.*/
.container{width: 100%;text-align: center;}
.item{display: inline-block;width: 30%;background-color: lightcoral;margin: 1%;padding: 20px;}
/*Output: Three items displayed side by side, adjusting their width responsively based on the viewport.*/

/*6.Create a block elemetn with borders and margins.*/
.block2{display: block;background-color: lightblue;border: 2px solid blue;margin: 20px; padding: 10px;}
/*Output: A block element with blue borders and margin space around it.*/

/*7.Create a grid layout using inline-block elements.*/
.grid{display: grid;width: 30%;background-color: lightgreen;margin: 1%;padding: 20px;vertical-align: top;}
/*Output:Three grid items displayed in a row with equal spacing.*/

/*8.Create a stacked layout using block elements.*/
.block3{display: block;background-color: lightblue;margin: 10px;padding: 20px;}
/*Output: Three block elements stacked vertically with margin and padding.*/

/*9.Create a form with inline-block labels and inputs.*/
label{display: inline-block;width: 100px;margin-right: 10px;}
input{display: inline-block;margin-bottom: 10px;}
/*Output:A form with inline-block labels next to their corresponding input fields.*/

